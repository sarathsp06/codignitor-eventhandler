{"name":"Codignitor-eventhandler","tagline":"An Event handler for codignitor with webhook support","body":"### Codegnitor EventHandler\r\nHere its an event handler library to make the codeignitor [MVC] framework to work with event based systems also.The system can be used with any php project but s tested agains codeigntor only \r\nHow to use \r\n\r\n```\r\ngit clone https://github.com/sarathsp06/codignitor-eventhandler.git\r\n```\r\n\r\n### Triggering Events\r\nYou can either trigger custom triggers or predefined triggers\r\n\r\n```\r\nEventHandler::instance()->trigger(new Event(EventNames::NUMBER_VERIFIED,array('number'=>'8907965331')))\r\n```\r\nHere new trigger named EventNames::NUMBER_VERIFIED is triggered it could be any string\r\nPassed the array as the arguments required for the listeners here 'number'\r\nListeners can be added in the default_listeners file as \r\n### Adding Listeners\r\n```\r\n#array(\"event\":\"The name of the event\",\"listener\":\"Listener instance\")\r\n$default_lsteners[] = array(\r\n    \"event\"=> EventNames::NUMBER_VERIFIED,\r\n    \"listener\" => new Listener(\r\n    CODEBASEPATH.\"/some_helper_fle.php\",   //file path in which the function deines or null if webhook\r\n    null,                                  //class name if member function else null\r\n    'verifyAccount',                       //function name or url\r\n    ListenersTypes::Callable));            //type supported types are ListenersTypes::Callable and WebHook\r\n```\r\n### Authors and Contributors\r\nIn 2015, Sarath S Pllai (@sarathsp06) started and currently is not been maintained but any bug reports wpuld be addressed \r\n\r\n### Support or Contact\r\nHaving trouble using the library contact me at sarath.sp06@gmail.com\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}